.cf {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.font-size(@font-size) {
  font-size: @font-size*1px;
  font-size: (@font-size/@base-font-size)*1rem;
}

.border-radius (@radius: 3px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}

/* begin: css triangle */
.triangle-base() {
  content: '';
  display: block;
  width: 0;
  height: 0;
}
.triangle(@direction, @size, @color) when (@direction = up) {
  .triangle-base();
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  border-bottom: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = down) {
  .triangle-base();
  border-left: @size solid transparent;
  border-right: @size solid transparent;
  border-top: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = left) {
  .triangle-base();
  border-top: @size solid transparent;
  border-bottom: @size solid transparent;
  border-right: @size solid @color;
}
.triangle(@direction, @size, @color) when (@direction = right) {
  .triangle-base();
  border-top: @size solid transparent;
  border-bottom: @size solid transparent;
  border-left: @size solid @color;
}
/* end: css triangle */

.animation (@string) {
  -webkit-animation: @string;
  -moz-animation: @string;
  -ms-animation: @string;
  animation: @string;
}

.transition (@transition) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -ms-transition: @transition;
  -o-transition: @transition;
  transition: @transition;
}
.transform(@string) {
  -webkit-transform: @string;
  -moz-transform: @string;
  -ms-transform: @string;
  -o-transform: @string;
  transform: @string;
}

.translate(@x:0, @y:0) {
  -webkit-transform: translate(@x, @y);
  -moz-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  -o-transform: translate(@x, @y);
  transform: translate(@x, @y);
}

.translateZ(@z) {
  -webkit-translateZ: @z;
  -moz-translateZ: @z;
  -ms-translateZ: @z;
  -o-translateZ: @z;
  translateZ: @z;
}

.perspective(@string) {
  -webkit-perspective: @string;
  -moz-perspective: @string;
  -ms-perspective: @string;
  -o-perspective: @string;
  perspective: @string;
}

.perspective-origin(@string) {
  -webkit-perspective-origin: @string;
  -moz-perspective-origin: @string;
  -ms-perspective-origin: @string;
  -o-perspective-origin: @string;
  perspective-origin: @string;
}


.transform-style(@string) {
  -webkit-transform-style: @string;
  -moz-transform-style: @string;
  -ms-transform-style: @string;
  -o-transform-style: @string;
  transform-style: @string;
}

.drop-shadow (@x: 0, @y: 1px, @blur: 8px, @spread: 0, @alpha: 0.25) {
  -webkit-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
  box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.opacity (@opacity: 0.5) {
  -webkit-opacity: @opacity;
  -moz-opacity: @opacity;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  -khtml-opacity: 0.40;
  filter: alpha(opacity=40);
  opacity: @opacity;
}

// begin: linear gradients

// @param dir                 :  top, left, 90deg
// @param start-color         :  #000, rgba(255,255,255,0.5)
// @param end-color           :  #000, rgba(255,255,255,0.5)
//
// NOTE: The direction for the IE gradient is automagically
// worked out for you based either on the direction or the
// angle that you pass in. Obviously it will only be a
// horizontal or vertical gradient, but it's still awesome.
//
// ALSO: Support for rgba is covered in IE too. Values are
// converted to aRGB.
//
// @example .linear-gradient(50deg,  #eee, #aaa); (IE auto included)
//
// OR
//
// @example .linear-gradient-multi(~'top, #eee 0%, #aaa 50%, #eee 100%');
//          .linear-gradient-ie(top, #eee, #aaa);
//
//
// @see http://dev.w3.org/csswg/css3-images/#linear-gradients


.linear-gradient( @dir: top, @start-color: #eee, @end-color: #aaa ) {
  background: -webkit-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -moz-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -ms-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -o-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: linear-gradient(@dir, @start-color 0%, @end-color 100%);
  .linear-gradient-ie(@dir, @start-color, @end-color);
}

.linear-gradient-multi( ... ) {
  background-image: -webkit-linear-gradient(@arguments);
  background-image: -moz-linear-gradient(@arguments);
  background-image: -ms-linear-gradient(@arguments);
  background-image: -o-linear-gradient(@arguments);
  background-image: linear-gradient(@arguments);
}

.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = top),
  not ( isstring(@dir) ) and ( @dir >= 225 ) and ( @dir < 315 ),
  not ( isstring(@dir) ) and ( @dir >= -135 ) and ( @dir < -45 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = right),
  not ( isstring(@dir) ) and ( @dir >= 135 ) and ( @dir < 225 ),
  not ( isstring(@dir) ) and ( @dir >= -225 ) and ( @dir < -135 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 1);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = bottom),
  not ( isstring(@dir) ) and ( @dir >= 45 ) and ( @dir < 135 ),
  not ( isstring(@dir) ) and ( @dir >= -315 ) and ( @dir < -225 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = left),
  not ( isstring(@dir) ) and ( @dir >= 315 ) and ( @dir < 360 ),
  not ( isstring(@dir) ) and ( @dir >= -45 ) and ( @dir < 45 ),
  not ( isstring(@dir) ) and ( @dir < -315 ) and ( @dir >= -360 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 1);
}

.linear-gradient-ie-filter(@start: #eee, @end: #aaa, @type: 1) {
  @c-start: argb(@start);
  @c-end: argb(@end);
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}', endColorstr='@{c-end}', GradientType=@{type})";
  -ms-filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}',endColorstr='@{c-end}',GradientType=@{type})";
}

/* end: linear gradients */

